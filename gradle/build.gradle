
//
// NOTICE: This Gradle build script is COMPLETELY CUSTOM and necessary for PickHaxe to run.
//         If you need to modify this file, I can 
// 

buildscript {
  println "Java: ${System.getProperty('java.version')}, JVM: ${System.getProperty('java.vm.version')} (${System.getProperty('java.vendor')}), Arch: ${System.getProperty('os.arch')}"

  println "PickHaxe: ${System.getProperty('pickhaxe.version')}, Loader: ${System.getProperty('pickhaxe.loader.current')}"
} 

// Reference all Gradle plugins, with versions.
plugins {
  //
  // Forge
  //
  id 'net.minecraftforge.gradle' version '5.1.+' apply false

  // 
  // Fabric
  //
  id 'fabric-loom' version '1.1-SNAPSHOT' apply false

  //
  // Common
  //
  id 'maven-publish'
}

// Select the Gradle plugin based on the loader.
switch(System.getProperty('pickhaxe.loader.current')) {
  case 'forge':
    apply plugin: 'net.minecraftforge.gradle'
    apply plugin: 'org.parchmentmc.librarian.forgegradle'
    break
  case 'fabric':
    apply plugin: 'fabric-loom'
    break
  case null:
    throw new Exception("PickHaxe: Missing loader")
  default:
    throw new Exception("PickHaxe: Unknown loader: ${System.getProperty('pickhaxe.loader.current')}")
}

switch(System.getProperty('pickhaxe.java.version')) {
  case '1.8':
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  case '16':
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
  case '17':
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

archivesBaseName = System.getProperty('pickhaxe.mod.id')
version = System.getProperty('pickhaxe.mod.version')
group = System.getProperty('pickhaxe.mod.parentPackage')

repositories {
  mavenCentral()
  gradlePluginPortal()
  // Fabric plugins and API libraries
  maven { url = 'https://maven.fabricmc.net' }
  // Forge plugins and API libraries
  maven { url = 'https://maven.minecraftforge.net' }
  // ParchmentMC Mappings
  maven { url = 'https://maven.parchmentmc.org' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${System.getProperty('pickhaxe.minecraft.version')}"
	// mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
  mappings loom.layered() {
      officialMojangMappings()
      parchment("org.parchmentmc.data:parchment-1.19.3:2023.02.26@zip")
  }

	modImplementation "net.fabricmc:fabric-loader:${System.getProperty('pickhaxe.loader.fabric.loaderVersion')}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${System.getProperty('pickhaxe.loader.fabric.apiVersion')}"

	//modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = System.getProperty('pickhaxe.java.version') == '17' ? 17 : 8
}

sourceSets {
  // Haxe generates Java source in a different spot.
  main.java.srcDirs = ['java/src']
  // LOL we can just reuse the resources folder.
  main.resources.srcDirs = ['resources']
}

task copyDependencies(type: Copy) {
  from configurations.compileClasspath
  into "$buildDir/minecraft"
}
copyDependencies.group = 'PickHaxe'
copyDependencies.description = 'Copies all runtime dependencies to a place where they can be easily referenced by Haxe.'

task copyBuildArtifacts(type: Copy) {
  def buildFile = file("$buildDir/libs/${archivesBaseName}-${version}.jar")
  from buildFile
  into "../build/${System.getProperty('pickhaxe.loader.current')}/${System.getProperty('pickhaxe.minecraft.version')}/"
}
copyBuildArtifacts.group = 'PickHaxe'
copyBuildArtifacts.description = 'Copies the built Minecraft mod JAR to a place where it can be easily accessed.'

// Modify the `build` task to include additional metadata in the MANIFEST.
tasks.jar {
  manifest {
    attributes(
      'PickHaxe-Library-Version': System.getProperty('pickhaxe.version'),
      'PickHaxe-Haxe-Version': System.getProperty('pickhaxe.haxe.version'),
      'PickHaxe-Minecraft-Version': System.getProperty('pickhaxe.minecraft.version'),
      'PickHaxe-Loader': System.getProperty('pickhaxe.loader.current'),
      'PickHaxe-Mod-Metadata-Id': System.getProperty('pickhaxe.mod.id'),
      'PickHaxe-Mod-Metadata-Version': System.getProperty('pickhaxe.mod.version'),
    )
  }
}

// Run the copyBuildArtifacts task after the build task.
build.finalizedBy(copyBuildArtifacts)
